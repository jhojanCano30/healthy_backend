openapi: 3.0.0
info:
  title: Healthy Barf API
  version: 1.0.0
  description: Documentación de la API para el sistema Healthy Barf, cada ruta especificada aqui, será usada en el frontend

servers:
  - url: http://localhost:3000
    description: Servidor local

paths:
  /auth/registro:
    post:
      summary: Registrar nuevo usuario
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                correo:
                  type: string
                contrasena:
                  type: string
      responses:
        '200':
          description: Registro exitoso
        '400':
          description: Correo ya registrado

  /auth/login:
    post:
      summary: Iniciar sesión
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                contrasena:
                  type: string
      responses:
        '200':
          description: Login exitoso con token
        '401':
          description: Credenciales inválidas

  /usuario/perfil:
    get:
      summary: Obtener datos del usuario autenticado
      tags: [Usuario]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Datos del usuario
        '401':
          description: No autorizado
  
  /user:
    get:
      summary: Obtener todos los usuarios
      description: Devuelve una lista de todos los usuarios registrados. Solo accesible para administradores.
      tags: [Usuario]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuarios obtenida correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    nombre:
                      type: string
                    correo:
                      type: string
                    rol:
                      type: string
        '403':
          description: Acceso denegado (no es administrador)
        '401':
          description: No autorizado (falta o token inválido)
          
  /user/{id}:
    delete:
      summary: Eliminar usuario
      description: Elimina un usuario por su ID. Solo accesible para administradores.
      tags: [Usuario]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Usuario eliminado correctamente
        '404':
          description: Usuario no encontrado
        '403':
          description: Acceso denegado
        '401':
          description: No autorizado

  /user/perfil/{id}:
    put:
      summary: Actualizar perfil de usuario
      description: Permite al usuario autenticado actualizar su perfil y/o contraseña.
      tags: [Usuario]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                correo:
                  type: string
                contrasena:
                  type: string
      responses:
        '200':
          description: Perfil actualizado correctamente
        '401':
          description: No autorizado

  /producto/crear:
    post:
      summary: Crear producto
      description: Ruta para que el administrador cree un nuevo producto.
      tags: [Producto]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - nombre
                - descripcion
                - precio
                - stock
                - categoria
                - subcategoria
              properties:
                nombre:
                  type: string
                descripcion:
                  type: string
                precio:
                  type: number
                stock:
                  type: integer
                imagenUrl:
                  type: string
                categoria:
                  type: string
                  enum: [PERRO, GATO]
                subcategoria:
                  type: string
                  enum: [COMIDA_CRUDA, SNACK]
      responses:
        '200':
          description: Producto creado exitosamente
        '401':
          description: No autorizado (sin token o no es admin)
        '500':
          description: Error interno del servidor

  /producto/listar:
    get:
      summary: Listar productos
      description: Devuelve una lista de todos los productos disponibles.
      tags: [Producto]
      responses:
        '200':
          description: Lista de productos
        '500':
          description: Error al obtener los productos

  /producto/actualizar/{id}:
    put:
      summary: Actualizar producto
      description: Permite al administrador actualizar un producto existente por ID.
      tags: [Producto]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                descripcion:
                  type: string
                precio:
                  type: number
                stock:
                  type: integer
                imagenUrl:
                  type: string
                categoria:
                  type: string
                  enum: [PERRO, GATO]
                subcategoria:
                  type: string
                  enum: [COMIDA_CRUDA, SNACK]
      responses:
        '200':
          description: Producto actualizado
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor

  /producto/eliminar/{id}:
    delete:
      summary: Eliminar producto
      description: Permite al administrador eliminar un producto por su ID.
      tags: [Producto]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Producto eliminado correctamente
        '401':
          description: No autorizado
        '500':
          description: Error interno del servidor


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: Auth
    description: Rutas de autenticación de usuarios
  - name: Usuario
    description: Acciones relacionadas con usuarios autenticados, clientes y admins
  - name: Producto
    description: Operaciones CRUD de productos (solo admin puede crear, editar o eliminar)
